import streamlit as st 
import streamlit.components.v1 as components
from openai import OpenAI
import pandas as pd
from duckduckgo_search import DDGS

AI_Client = OpenAI(
    api_key=st.secrets['OPENAI_KEY'], 
    base_url=st.secrets['OPENAI_URL']
)
def generate_answer(question, prompt):
    messages = []
    messages.append({"role": "system", "content": prompt})
    messages.append({"role": "user", "content": question})
    response = AI_Client.chat.completions.create(
    model="openai/gpt-3.5-turbo", # id –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å OpenAI, Anthropic –∏ –ø—Ä. –º–µ–Ω—è—è —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä
    messages=messages,
    temperature=0.7,
    n=1,
    max_tokens=3000, # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –í–´–•–û–î–ù–´–• —Ç–æ–∫–µ–Ω–æ–≤. –î–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –º–æ–¥–µ–ª–µ–π –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4096
    extra_headers={ "X-Title": "My App" }, )# –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ - –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ API-–≤—ã–∑–æ–≤–∞
    rezult = response.choices[0].message.content
    return(rezult)

#generate answer with duck-duckgo search
def generate_answer_DDGS(question, prompt):
    results = DDGS().chat(f"–¢—ã - {prompt} . –í—ã–ø–æ–ª–Ω–∏ –∑–∞–ø—Ä–æ—Å {question}", model='gpt-4o-mini')
    return(results)

st.set_page_config(
    page_title="WebCreatorBot",
    page_icon="üëã",
)
#df_prompt_rus = pd.read_csv('data/df_prompt_rus2.csv')
with st.sidebar:
    st.title('–ë–æ—Ç - –í–µ–±–ö—Ä–µ–∞—Ç–æ—Ä')
    st.image('data/bot.png')
    st.divider()
    st.subheader('–û–ø–∏—Å–∞–Ω–∏–µ')
    st.markdown("–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ html, css, javascript –∫–æ–¥–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—É")
    #role = st.selectbox(label = '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å', options=df_prompt_rus.act_rus.to_list())
    base_prompt = 'I want you to act as a junior developer of individual interface blocks. I will describe the details of the block that you will code using the following programming languages: html, css, javascript. Do not separate html, css, js, combine all elements into one <div> block in order to insert the resulting code into an existing HTML document. Do not write explanations.'
    
    
    #df_prompt_rus[df_prompt_rus.act_rus == role]['prompt'].to_list()[0]
    #st.text_area(label = '–ü—Ä–æ–º–ø—Ç –æ—Ç–≤–µ—Ç–∞', value=base_prompt)

question = st.text_area(label = '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø–∏—à–∏—Ç–µ –±–ª–æ–∫ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–∞ –≤–µ–± —Å—Ç—Ä–∞–Ω–∏—Ü—É', height = 300)
if st.button(label = '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥'):
    try:
        st.write('Duck Duck GO Rezults')
        rezult = generate_answer_DDGS(question, base_prompt)
    except:
        st.write('OPEN AI Rezults')
        rezult = generate_answer(question, base_prompt)
    if rezult:
        st.write(rezult)
        components.html(rezult, width = 600, height = 600, scrolling=True)
